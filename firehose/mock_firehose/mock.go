// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-kinesis-firehose-for-fluent-bit/firehose (interfaces: PutRecordBatcher)

// Package mock_firehose is a generated GoMock package.
package mock_firehose

import (
	reflect "reflect"

	firehose "github.com/ZEPL/aws-sdk-go/service/firehose"
	gomock "github.com/golang/mock/gomock"
)

// MockPutRecordBatcher is a mock of PutRecordBatcher interface
type MockPutRecordBatcher struct {
	ctrl     *gomock.Controller
	recorder *MockPutRecordBatcherMockRecorder
}

// MockPutRecordBatcherMockRecorder is the mock recorder for MockPutRecordBatcher
type MockPutRecordBatcherMockRecorder struct {
	mock *MockPutRecordBatcher
}

// NewMockPutRecordBatcher creates a new mock instance
func NewMockPutRecordBatcher(ctrl *gomock.Controller) *MockPutRecordBatcher {
	mock := &MockPutRecordBatcher{ctrl: ctrl}
	mock.recorder = &MockPutRecordBatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPutRecordBatcher) EXPECT() *MockPutRecordBatcherMockRecorder {
	return m.recorder
}

// PutRecordBatch mocks base method
func (m *MockPutRecordBatcher) PutRecordBatch(arg0 *firehose.PutRecordBatchInput) (*firehose.PutRecordBatchOutput, error) {
	ret := m.ctrl.Call(m, "PutRecordBatch", arg0)
	ret0, _ := ret[0].(*firehose.PutRecordBatchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutRecordBatch indicates an expected call of PutRecordBatch
func (mr *MockPutRecordBatcherMockRecorder) PutRecordBatch(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutRecordBatch", reflect.TypeOf((*MockPutRecordBatcher)(nil).PutRecordBatch), arg0)
}
